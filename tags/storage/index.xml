<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Storage on Blog </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://guptayuvraj.github.io/tags/storage/</link>
    <language>en-us</language>
    <author>Yuvraj Gupta</author>
    
    <updated>Fri, 08 Apr 2016 00:00:00 UTC</updated>
    
    <item>
      <title>Implement Storage Virtualization</title>
      <link>http://guptayuvraj.github.io/post/Implement-Storage-Virtualization/</link>
      <pubDate>Fri, 08 Apr 2016 00:00:00 UTC</pubDate>
      <author>Yuvraj Gupta</author>
      <guid>http://guptayuvraj.github.io/post/Implement-Storage-Virtualization/</guid>
      <description>&lt;p&gt;Why do we need to implement Storage Virtualization?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Increasing Storage Demands&lt;/li&gt;
&lt;li&gt;Too long to do backup and restore.&lt;/li&gt;
&lt;li&gt;Limited Space in Data Center.&lt;/li&gt;
&lt;li&gt;Need to improve DR capabilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Approach for implementation of Storage Virtualization?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Host Based:&lt;/strong&gt;  Physical drives are handled by traditional device driver, while a software layer above device driver intercepts I/O requests, looks up metadata and redirects I/O.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple to design and code.&lt;/li&gt;
&lt;li&gt;Supports any storage type.&lt;/li&gt;
&lt;li&gt;Improves storage utilization without thin provisioning restrictions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Replication and data migration only possible locally to that host.&lt;/li&gt;
&lt;li&gt;Traditional data recovery following a server disk crash is impossible.&lt;/li&gt;
&lt;li&gt;Storage utilization optimized only on per host basis.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Network Based:&lt;/strong&gt;  Storage virtualization is viewed as a network-based device using fibre channel networks connected as SAN. A fibre channel switch which is in between the host and storage will virtualize all requests. Interestingly operating system on the host doesn’t know it’s happening as it this method doesn’t rely on operating system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple Management Interface.&lt;/li&gt;
&lt;li&gt;Replication services across heterogeneous devices.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Difficult to implement fast metadata updates in switches.&lt;/li&gt;
&lt;li&gt;Out-of-band requires specific host based software.&lt;/li&gt;
&lt;li&gt;In-band adds latency to I/O.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Implementation of Network based&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Appliance Based:&lt;/strong&gt; an appliance residing between client and storage array implements storage virtualization layer and becomes new storage target. When the data is sent to appliance via client storage virtualization features can be enabled such as snapshot, thin provisioning and data replication.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Versatility&lt;/li&gt;
&lt;li&gt;Cost&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Switch Based:&lt;/strong&gt; an application that resides in server connected to fibre channel SAN switch. Though it sits in between host and storage but it may use different techniques for metadata mapping.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Faster Speed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Expensive.&lt;/li&gt;
&lt;li&gt;Lacks features such as thin provisioning.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Storage Device Based:&lt;/strong&gt; the primary storage controller allows direct attachment of other storage controllers and provides virtualization services. It will provide pooling and metadata management services.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pros:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No additional hardware or infrastructure requirement.&lt;/li&gt;
&lt;li&gt;Provides most of the benefits of storage virtualization.&lt;/li&gt;
&lt;li&gt;Does not add latency to individual I/O.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Cons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Storage utilization optimized only across the connected controllers&lt;/li&gt;
&lt;li&gt;Replication and data migration only possible across the connected controllers and same vendors device for long distance support&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Array Based:&lt;/strong&gt; storage virtualization layer lives entirely within storage array.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Challenges  of Storage Virtualization</title>
      <link>http://guptayuvraj.github.io/post/Challenges-Storage-Virtualization/</link>
      <pubDate>Thu, 07 Apr 2016 00:00:00 UTC</pubDate>
      <author>Yuvraj Gupta</author>
      <guid>http://guptayuvraj.github.io/post/Challenges-Storage-Virtualization/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Storage Architecture becomes  much more complicated.&lt;/li&gt;
&lt;li&gt;More complication may lead to troubleshooting problems.&lt;/li&gt;
&lt;li&gt;Problem determination and fault isolation can become complex.&lt;/li&gt;
&lt;li&gt;Arise of situations in which physical storage resources are overcommitted.&lt;/li&gt;
&lt;li&gt;Backing out of failed implementation.&lt;/li&gt;
&lt;li&gt;Interoperability.&lt;/li&gt;
&lt;li&gt;Management of Meta Data.&lt;/li&gt;
&lt;li&gt;Higher Latency&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Benefits of Storage Virtualization</title>
      <link>http://guptayuvraj.github.io/post/Benefits-Storage-Virtualization/</link>
      <pubDate>Wed, 06 Apr 2016 00:00:00 UTC</pubDate>
      <author>Yuvraj Gupta</author>
      <guid>http://guptayuvraj.github.io/post/Benefits-Storage-Virtualization/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Improved Storage Management in an IT environment&lt;/li&gt;
&lt;li&gt;Better availability and estimation of downtime required with automated management.&lt;/li&gt;
&lt;li&gt;Ability to migrate data while retaining  I/O access (Non disruptive data migration).&lt;/li&gt;
&lt;li&gt;Reduce the number of SAN devices.&lt;/li&gt;
&lt;li&gt;Decrease in Power consumed.&lt;/li&gt;
&lt;li&gt;Time Saving.&lt;/li&gt;
&lt;li&gt;Ease in Data Replication.&lt;/li&gt;
&lt;li&gt;Easy backup, archiving and recovery tasks.&lt;/li&gt;
&lt;li&gt;Expansion of Storage Capacity.&lt;/li&gt;
&lt;li&gt;Easy Updates&lt;/li&gt;
&lt;li&gt;Ability to increase Storage Volume Size in real time.&lt;/li&gt;
&lt;li&gt;Increased loading and backup speed.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>What is Storage Virtualization</title>
      <link>http://guptayuvraj.github.io/post/What-is-Storage-Virtualization/</link>
      <pubDate>Tue, 05 Apr 2016 00:00:00 UTC</pubDate>
      <author>Yuvraj Gupta</author>
      <guid>http://guptayuvraj.github.io/post/What-is-Storage-Virtualization/</guid>
      <description>&lt;p&gt;It is the abstraction of physical media (hard disks or solid state drives etc) from the attaching servers which treats the storage as a single logical entity without regard to the hierarchy of physical media that is involved. Storage virtualization means adding an abstraction layer of software that hides the physical devices from the user and allows all devices to be managed as a single pool.
It adds a new layer of software or hardware in between the storage systems and servers so that the applications would not require to know to which logical drive, partitions or storage subsystems the data resides in.&lt;/p&gt;

&lt;p&gt;Within the context of a storage system, there are two primary types of virtualization that can occur:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Block virtualization&lt;/strong&gt; used in this context refers to the abstraction (separation) of logical storage (partition) from physical storage so that it may be accessed without regard to physical storage or heterogeneous structure. This separation allows the administrators of the storage system greater flexibility in how they manage storage for end users. The act of applying virtualization , to one or more block based (storage) services for the purpose of providing a new aggregated, higher level, richer, simpler, secure, etc., block service to clients. Block virtualization functions can be nested. A disk drive, RAID system or volume manager all perform some form of block address to (different) block address mapping or aggregation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;File virtualization&lt;/strong&gt; addresses the NAS challenges by eliminating the dependencies between the data accessed at the file level and the location where the files are physically stored. This provides opportunities to optimize storage use and server consolidation and to perform non-disruptive file migrations. File virtualization is the creation of an abstraction layer between file servers and the clients that access those file servers. Once deployed, the file virtualization layer manages files and file systems across servers, allowing administrators to present clients with one logical file mount for all servers&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
