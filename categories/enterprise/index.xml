<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Enterprise on Blog </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://guptayuvraj.github.io/categories/enterprise/</link>
    <language>en-us</language>
    <author>Yuvraj Gupta</author>
    
    <updated>Wed, 23 Mar 2016 00:00:00 UTC</updated>
    
    <item>
      <title>How Cloud Computing will help?</title>
      <link>http://guptayuvraj.github.io/post/Importance-Cloud-Computing/</link>
      <pubDate>Wed, 23 Mar 2016 00:00:00 UTC</pubDate>
      <author>Yuvraj Gupta</author>
      <guid>http://guptayuvraj.github.io/post/Importance-Cloud-Computing/</guid>
      <description>&lt;p&gt;The applications of cloud computing are practically limitless. With the right middleware, a cloud computing system could execute all the programs a normal computer could run. Potentially, everything from generic word processing software to customized computer programs designed for a specific company could work on a cloud computing system.
Why would anyone want to rely on another computer system to run programs and store data? Here are just a few reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clients would be able to access their applications and data from anywhere at any time. They could access the cloud computing system using any computer linked to the Internet. Data wouldn’t be confined to a hard drive on one user’s computer or even a corporation’s internal network.&lt;/li&gt;
&lt;li&gt;It could bring hardware costs down. Cloud computing systems would reduce the need for advanced hardware on the client side. You wouldn’t need to buy the fastest computer with the most memory, because the cloud system would take care of those needs for you. Instead, you could buy an inexpensive computer terminal. The terminal could include a monitor, input devices like a keyboard and mouse and just enough processing power to run the middleware necessary to connect to the cloud system. You wouldn’t need a large hard drive because you’d store all your information on a remote computer.&lt;/li&gt;
&lt;li&gt;Corporations that rely on computers have to make sure they have the right software in place to achieve goals. Cloud computing systems give these organizations company-wide access to computer applications. The companies don’t have to buy a set of software or software licenses for every employee. Instead, the company could pay a metered fee to a cloud computing company.&lt;/li&gt;
&lt;li&gt;Servers and digital storage devices take up space. Some companies rent physical space to store servers and databases because they don’t have it available on site. Cloud computing gives these companies the option of storing data on someone else’s hardware, removing the need for physical space on the front end.&lt;/li&gt;
&lt;li&gt;Corporations might save money on IT support. Streamlined hardware would, in theory, have fewer problems than a network of heterogeneous machines and operating systems.&lt;/li&gt;
&lt;li&gt;If the cloud computing system’s back end is a grid computing system, then the client could take advantage of the entire network’s processing power. Often, scientists and researchers work with calculations so complex that it would take years for individual computers to complete them. On a grid computing system, the client could send the calculation to the cloud for processing. The cloud system would tap into the processing power of all available computers on the back end, significantly speeding up the calculation.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Cloud Enterprise Applications: 12 principles of operational readiness</title>
      <link>http://guptayuvraj.github.io/post/Cloud-Enterprise-Operational-Readiness/</link>
      <pubDate>Mon, 21 Mar 2016 00:00:00 UTC</pubDate>
      <author>Yuvraj Gupta</author>
      <guid>http://guptayuvraj.github.io/post/Cloud-Enterprise-Operational-Readiness/</guid>
      <description>

&lt;h1 id=&#34;enterprise-service-operational-principles&#34;&gt;Enterprise service operational principles&lt;/h1&gt;

&lt;p&gt;These dozen statements describe how an enterprise service should be. If all these statements apply to my new enterprise service, I can happily stamp my operational approval on it.&lt;/p&gt;

&lt;p&gt;I have provided a few examples to make these statements a little clearer, but I have not described the actions required to get there. As you can imagine, putting these principles into practice for enterprise services is complicated. It’s almost impossible to get everything right.&lt;/p&gt;

&lt;p&gt;Many cloud innovatorprovide services in one or two of these areas, to ease an organization’s workload. You can pay Green Hat to provide cloud-based performance testing tools, Core Cloud Inspect to check security, and Cloudkick to monitor infrastructure. A few big players like EMC and Novell have enough tools to take all the responsibility. The bigger your wallet, the more responsibility you can avoid.&lt;/p&gt;

&lt;h2 id=&#34;my-enterprise-service&#34;&gt;My enterprise service:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Has been functionally tested&lt;/strong&gt;:- If a new business application has not yet been signed off by the guy paying the bills, I will waste my time carrying out operational tests.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Has capacity&lt;/strong&gt;:- Sysadmins may want to scale up the disk space for a storage service and the bandwidth for a video chat service. They may scale down to a pocket calculator for a monitoring service.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is resilient&lt;/strong&gt;:- This is the world of High Availability: double up on single points of failure, improve code quality, and even if something does fail, make sure the service handles it gracefully.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is recoverable&lt;/strong&gt;:- If the student deletes half the files or the computer room catches fire, service can be restored.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is reliable&lt;/strong&gt;:- Customers use Internet services 24 hours a day, but an intranet may only be needed during office hours. An intranet that is down every night may still be perfectly reliable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is scalable&lt;/strong&gt;:- What if the new service has traffic spikes or gets really popular? I may need to scale out by adding more servers. Wading through treacle is not attractive.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is monitored&lt;/strong&gt;:- The operational support people must be alerted immediately if someone breaks into the computer room, if upstream services disappear, and if a process goes berserk.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is supportable&lt;/strong&gt;:- If an architect designs an Internet bank that only runs on one server, how pleased will customers be when an operator turns off the bank to upgrade the memory?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Is secure&lt;/strong&gt;:- Vulnerabilities get patched, an IDS (Intrusion Detection System) watches the network, and the security team have signed on the dotted line.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Has been pushed to the limit&lt;/strong&gt;:- The whole system has been thrashed, bottlenecks fixed and the system thrashed again and again. The service owner then knows how much performance can be squeezed out of her service.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Has integrity&lt;/strong&gt;:- The customer support people won’t be plagued by calls from customers whose data is inconsistent, whose files have disappeared, or whose transactions were duplicated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Will operate within the SLA&lt;/strong&gt;:- The people sponsoring this service deserve to know how their investment is doing. The service builders automate the measurement and reports of the service level. Stakeholders can then help a failing service to succeed.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
